# Generated by Django 5.1.5 on 2025-03-17 19:24

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CampaignType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Campaign Type',
                'verbose_name_plural': 'Campaign Types',
                'db_table': 'campaign_type',
            },
        ),
        migrations.CreateModel(
            name='Channel',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'verbose_name': 'Channel',
                'verbose_name_plural': 'Channels',
                'db_table': 'channel',
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('whatsapp_number', models.CharField(max_length=15)),
                ('gender', models.CharField(blank=True, choices=[('male', 'Male'), ('female', 'Female'), ('other', 'Other')], max_length=10, null=True)),
                ('dob', models.DateField(blank=True, null=True)),
                ('anniversary_date', models.DateField(blank=True, null=True)),
                ('city', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customer',
            },
        ),
        migrations.CreateModel(
            name='Outlet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('area', models.CharField(max_length=255)),
                ('city', models.CharField(max_length=100)),
                ('zip_code', models.CharField(max_length=15)),
                ('state', models.CharField(max_length=100)),
                ('daily_footfalls', models.IntegerField(blank=True, null=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Outlet',
                'verbose_name_plural': 'Outlets',
                'db_table': 'outlet',
            },
        ),
        migrations.CreateModel(
            name='Profession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Profession',
                'verbose_name_plural': 'Professions',
                'db_table': 'profession',
            },
        ),
        migrations.CreateModel(
            name='RewardChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'verbose_name': 'Reward Choice',
                'verbose_name_plural': 'Reward Choices',
                'db_table': 'reward_choice',
            },
        ),
        migrations.CreateModel(
            name='UserRole',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('role', models.CharField(max_length=20, unique=True)),
            ],
            options={
                'verbose_name': 'User Role',
                'verbose_name_plural': 'User Roles',
                'db_table': 'user_role',
            },
        ),
        migrations.CreateModel(
            name='UserMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone_number', models.CharField(max_length=15, unique=True)),
                ('social_account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('social_account_provider', models.CharField(blank=True, max_length=50, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('is_profile_update', models.BooleanField(default=False)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='user_master_groups', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='user_master_permissions', to='auth.permission')),
                ('role', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='v1.userrole')),
            ],
            options={
                'verbose_name': 'User Master',
                'verbose_name_plural': 'User Masters',
                'db_table': 'user_master',
            },
        ),
        migrations.CreateModel(
            name='CustomerFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('whatsapp_number', models.CharField(max_length=15)),
                ('birthday', models.DateField(blank=True, null=True)),
                ('anniversary', models.DateField(blank=True, null=True)),
                ('age_group', models.CharField(choices=[('10-15', '10-15'), ('16-30', '16-30'), ('31-45', '31-45'), ('>45', 'Above 45')], max_length=10)),
                ('city', models.CharField(max_length=100)),
                ('visit_frequency', models.CharField(max_length=255)),
                ('date_of_visit', models.DateField()),
                ('favorite_services', models.TextField(blank=True, null=True)),
                ('overall_experience', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('service_quality_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('item_quality_rating', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('value_for_money', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('would_recommend', models.BooleanField(default=False)),
                ('likelihood_to_return', models.IntegerField(choices=[(1, '1'), (2, '2'), (3, '3'), (4, '4'), (5, '5')])),
                ('emotions', models.CharField(choices=[('Happy', 'Happy'), ('Excited', 'Excited'), ('Neutral', 'Neutral'), ('Disappointed', 'Disappointed'), ('Frustrated', 'Frustrated')], max_length=20)),
                ('suggestions', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='v1.customer')),
                ('outlet', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedbacks', to='v1.outlet')),
            ],
            options={
                'verbose_name': 'Customer Feedback',
                'verbose_name_plural': 'Customer Feedbacks',
                'db_table': 'customer_feedback',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('website', models.URLField(blank=True, null=True)),
                ('brand_name', models.CharField(blank=True, max_length=255, null=True)),
                ('daily_approximate_footfalls', models.IntegerField(blank=True, null=True)),
                ('brand_logo', models.ImageField(blank=True, null=True, upload_to='brand_logos/')),
                ('area', models.CharField(blank=True, max_length=100, null=True)),
                ('city', models.CharField(blank=True, max_length=100, null=True)),
                ('zip_code', models.CharField(blank=True, max_length=15, null=True)),
                ('state', models.CharField(blank=True, max_length=100, null=True)),
                ('gstin', models.CharField(blank=True, max_length=15, null=True)),
                ('pan_number', models.CharField(blank=True, max_length=15, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
                'db_table': 'user_profile',
            },
        ),
        migrations.AddField(
            model_name='outlet',
            name='user_profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='outlets', to='v1.userprofile'),
        ),
        migrations.AddField(
            model_name='customer',
            name='msme',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='customers', to='v1.userprofile'),
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('expiry_date', models.DateField()),
                ('button_url', models.URLField(blank=True, null=True)),
                ('reward_choice_text', models.CharField(blank=True, max_length=50, null=True)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='campaign_logos/')),
                ('bg_image', models.ImageField(blank=True, null=True, upload_to='campaign_bg_images/')),
                ('image_url', models.URLField(blank=True, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('campaign_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='v1.campaigntype')),
                ('channels', models.ManyToManyField(related_name='campaign_channels', to='v1.channel')),
                ('outlets', models.ManyToManyField(blank=True, related_name='campaigns', to='v1.outlet')),
                ('profession', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='v1.profession')),
                ('reward_choice', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='v1.rewardchoice')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='v1.userprofile')),
            ],
            options={
                'verbose_name': 'Campaign',
                'verbose_name_plural': 'Campaigns',
                'db_table': 'campaign',
            },
        ),
    ]
